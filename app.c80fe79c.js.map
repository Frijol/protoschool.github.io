{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lessons/Blog/06.md","webpack:///./src/components/Explorer.vue?2c24","webpack:///./src/components/Lesson.vue?6454","webpack:///./src/lessons/Basics/03.md","webpack:///./src/lessons/Blog/04-exercise.md","webpack:///./src/lessons/Blog/02.md","webpack:///./src/lessons/Blog/07.md","webpack:///./src/lessons/Blog/06-exercise.md","webpack:///./src/lessons/Blog/04.md","webpack:///./src/components/home/ipfs-illustrations-how-3.svg","webpack:///./src/App.vue?a176","webpack:///./src/lessons/Basics/01-concepts.md","webpack:///./src/components/home/ipld.svg","webpack:///./src/lessons/Blog/05.md","webpack:///./src/lessons/Blog/01-exercise.md","webpack:///./src/lessons/Blog/03-exercise.md","webpack:///./src/components/home/ipfs-illustrations-how-4.svg","webpack:///./src/App.vue?9ee8","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/components/home/Home.vue?a316","webpack:///./src/components/home/ExerciseLink.vue?0a7c","webpack:///src/components/home/ExerciseLink.vue","webpack:///./src/components/home/ExerciseLink.vue?1785","webpack:///./src/components/home/ExerciseLink.vue","webpack:///src/components/home/Home.vue","webpack:///./src/components/home/Home.vue?ff88","webpack:///./src/components/home/Home.vue?5d6c","webpack:///./src/lessons/Basics/01.vue?7aee","webpack:///./src/components/Lesson.vue?84fe","webpack:///./src/components/Explorer.vue?a646","webpack:///src/components/Explorer.vue","webpack:///./src/components/Explorer.vue?6c08","webpack:///./src/components/Explorer.vue?dced","webpack:///./src/components/Button.vue?c755","webpack:///src/components/Button.vue","webpack:///./src/components/Button.vue?2b32","webpack:///./src/components/Button.vue?07be","webpack:///src/components/Lesson.vue","webpack:///./src/components/Lesson.vue?a1ba","webpack:///./src/components/Lesson.vue?f411","webpack:///src/lessons/Basics/01.vue","webpack:///./src/lessons/Basics/01.vue?33b4","webpack:///./src/lessons/Basics/01.vue","webpack:///./src/lessons/Basics/02.vue?6877","webpack:///src/lessons/Basics/02.vue","webpack:///./src/lessons/Basics/02.vue?4426","webpack:///./src/lessons/Basics/02.vue","webpack:///./src/lessons/Basics/03.vue?0a4d","webpack:///src/lessons/Basics/03.vue","webpack:///./src/lessons/Basics/03.vue?677b","webpack:///./src/lessons/Basics/03.vue","webpack:///./src/lessons/Blog/01.vue?7010","webpack:///./src/lessons/Blog/utils.js","webpack:///src/lessons/Blog/01.vue","webpack:///./src/lessons/Blog/01.vue?3082","webpack:///./src/lessons/Blog/01.vue","webpack:///./src/lessons/Blog/02.vue?1f58","webpack:///src/lessons/Blog/02.vue","webpack:///./src/lessons/Blog/02.vue?e033","webpack:///./src/lessons/Blog/02.vue","webpack:///./src/lessons/Blog/03.vue?dd05","webpack:///src/lessons/Blog/03.vue","webpack:///./src/lessons/Blog/03.vue?55e5","webpack:///./src/lessons/Blog/03.vue","webpack:///./src/lessons/Blog/04.vue?4f80","webpack:///src/lessons/Blog/04.vue","webpack:///./src/lessons/Blog/04.vue?9f7f","webpack:///./src/lessons/Blog/04.vue","webpack:///./src/lessons/Blog/05.vue?03e6","webpack:///src/lessons/Blog/05.vue","webpack:///./src/lessons/Blog/05.vue?42c6","webpack:///./src/lessons/Blog/05.vue","webpack:///./src/lessons/Blog/06.vue?59ad","webpack:///src/lessons/Blog/06.vue","webpack:///./src/lessons/Blog/06.vue?8026","webpack:///./src/lessons/Blog/06.vue","webpack:///./src/lessons/Blog/07.vue?d6da","webpack:///src/lessons/Blog/07.vue","webpack:///./src/lessons/Blog/07.vue?a5bf","webpack:///./src/lessons/Blog/07.vue","webpack:///./src/main.js","webpack:///./src/lessons/Basics/01.md","webpack:///./src/components/Button.vue?f2fd","webpack:///./src/components/home/ipfs-logo.svg","webpack:///./src/components/home/Home.vue?69e9","webpack:///./src/lessons/Blog/02-exercise.md","webpack:///./src/components/home/ipfs-illustrations-how-1.svg","webpack:///./src/lessons/Blog/05-exercise.md","webpack:///./src/lessons/Basics/02.md","webpack:///./src/lessons/Basics/02-concepts.md","webpack:///./src/lessons/Blog/03.md","webpack:///./src/lessons/Blog/01.md","webpack:///./src/lessons/Blog/07-exercise.md","webpack:///./src/lessons/Basics/02-exercise.md","webpack:///./src/lessons/Basics/01-exercise.md","webpack:///./src/lessons/Basics/03-exercise.md"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Explorer_vue_vue_type_style_index_0_id_d9fc3ea4_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Lesson_vue_vue_type_style_index_0_id_63049894_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_15d41714_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","Appvue_type_script_lang_js_","src_Appvue_type_script_lang_js_","component","componentNormalizer","App","Homevue_type_template_id_7c441f4c_scoped_true_render","staticClass","_m","staticStyle","top","left","_v","list-style-type","background","to","index","Homevue_type_template_id_7c441f4c_scoped_true_staticRenderFns","height","src","alt","ExerciseLinkvue_type_template_id_7fa7db93_render","_s","ExerciseLinkvue_type_template_id_7fa7db93_staticRenderFns","ExerciseLinkvue_type_script_lang_js_","props","home_ExerciseLinkvue_type_script_lang_js_","ExerciseLink_component","ExerciseLink","Homevue_type_script_lang_js_","components","home_Homevue_type_script_lang_js_","Home_component","Home","_01vue_type_template_id_09d52a20_render","text","validate","exercise","concepts","lessonTitle","_01vue_type_template_id_09d52a20_staticRenderFns","Lessonvue_type_template_id_63049894_scoped_true_render","domProps","innerHTML","parsedText","parsedConcepts","_e","class","expand","expandExercise","vertical-align","viewBox","width","xmlns","cx","cy","lessonNumber","title","on","click","toggleExpandExercise","fill","parsedExercise","srcPath","editorHeight","options","code","theme","language","mounted","onMounted","codeChange","onCodeChange","output","_b","test","error","message","fail","success","target","href","exploreIpldUrl","next","run","Lessonvue_type_template_id_63049894_scoped_true_staticRenderFns","Explorervue_type_template_id_d9fc3ea4_scoped_true_render","Explorervue_type_template_id_d9fc3ea4_scoped_true_staticRenderFns","Explorervue_type_script_lang_js_","self","cid","$attrs","toBaseEncodedString","concat","components_Explorervue_type_script_lang_js_","Explorer_component","Explorer","Buttonvue_type_template_id_6f2f165f_scoped_true_render","_t","Buttonvue_type_template_id_6f2f165f_scoped_true_staticRenderFns","Buttonvue_type_script_lang_js_","type","Function","required","components_Buttonvue_type_script_lang_js_","Button_component","Button","IPFS","CID","marked","hljs","registerLanguage","setOptions","highlight","highlightAuto","oldIPFS","_eval","_ref","asyncToGenerator","regeneratorRuntime","mark","_callee","ipfs","fn","require","_args","arguments","wrap","_context","prev","undefined","Promise","resolve","t0","abrupt","Error","sent","t1","stop","_x","_x2","defaultCode","MonacoEditor","vue_monaco_editor_default","a","selectOnLineNumbers","lineNumbersMinChars","scrollBeyondLastLine","automaticLayout","computed","$route","path","lastIndexOf","lineHeight","lines","Math","min","max","split","beforeCreate","methods","_run","_callee2","_context2","createIPFS","editor","getValue","vue_runtime_esm","set","isCID","repo","random","toString","current","parseInt","padStart","$router","components_Lessonvue_type_script_lang_js_","Lesson_component","Lesson","_01vue_type_script_lang_js_CID","hash","obj","expected","got","dag","JSON","stringify","_01_default","_01_exercise_default","_01_concepts_default","Basics_01vue_type_script_lang_js_","_01_component","Basics_01","_02vue_type_template_id_9f1b4f5e_render","_02vue_type_template_id_9f1b4f5e_staticRenderFns","_02vue_type_script_lang_js_CID","_02vue_type_script_lang_js_code","_02vue_type_script_lang_js_validate","bar","/","_02vue_type_script_lang_js_modules","cids","_02_default","_02_exercise_default","_02_concepts_default","Basics_02vue_type_script_lang_js_","_02_component","Basics_02","_03vue_type_template_id_9ea30442_render","_03vue_type_template_id_9ea30442_staticRenderFns","_03vue_type_script_lang_js_code","_03vue_type_script_lang_js_validate","remainderPath","_03vue_type_script_lang_js_modules","_03vue_type_script_lang_js_","_03_default","_03_exercise_default","Basics_03vue_type_script_lang_js_","_03_component","Basics_03","_01vue_type_template_id_018ab576_render","_01vue_type_template_id_018ab576_staticRenderFns","utils_CID","json","replace","validateArrayOfCids","size","Array","isArray","isCids","every","utils","shallowEqualArrays","Blog_01vue_type_script_lang_js_CID","_01vue_type_script_lang_js_code","_01vue_type_script_lang_js_validate","validatedArray","natCid","samCid","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","node","nodeAuthor","expectedAuthor","expectedCids","resultCids","iterator","done","author","includes","content","return","finish","map","sort","Blog_01vue_type_script_lang_js_","Blog_01_default","Blog_01_exercise_default","lessons_Blog_01vue_type_script_lang_js_","Blog_01_component","lessons_Blog_01","_02vue_type_template_id_7f4b54ee_render","_02vue_type_template_id_7f4b54ee_staticRenderFns","_02vue_type_script_lang_js_shallowEqualArrays","Blog_02vue_type_script_lang_js_code","Blog_02vue_type_script_lang_js_validate","isStrings","expectedTags","tags","tag","Blog_02vue_type_script_lang_js_","Blog_02_default","Blog_02_exercise_default","lessons_Blog_02vue_type_script_lang_js_","Blog_02_component","lessons_Blog_02","_03vue_type_template_id_ff69c5a4_render","_03vue_type_template_id_ff69c5a4_staticRenderFns","_03vue_type_script_lang_js_shallowEqualArrays","_03vue_type_script_lang_js_CID","Blog_03vue_type_script_lang_js_code","Blog_03vue_type_script_lang_js_validate","isLinks","treePostCid","computerPostCid","expectedPosts","nodePosts","posts","post","Blog_03vue_type_script_lang_js_","Blog_03_default","Blog_03_exercise_default","lessons_Blog_03vue_type_script_lang_js_","Blog_03_component","lessons_Blog_03","_04vue_type_template_id_4124f750_render","_04vue_type_template_id_4124f750_staticRenderFns","_04vue_type_script_lang_js_shallowEqualArrays","_04vue_type_script_lang_js_CID","_04vue_type_script_lang_js_code","_04vue_type_script_lang_js_validate","_04vue_type_script_lang_js_","_04_default","_04_exercise_default","Blog_04vue_type_script_lang_js_","_04_component","Blog_04","_05vue_type_template_id_d3b91d74_render","_05vue_type_template_id_d3b91d74_staticRenderFns","_05vue_type_script_lang_js_shallowEqualArrays","_05vue_type_script_lang_js_CID","_05vue_type_script_lang_js_code","_05vue_type_script_lang_js_validate","dogPostCid","_05vue_type_script_lang_js_","_05_default","_05_exercise_default","Blog_05vue_type_script_lang_js_","_05_component","Blog_05","_06vue_type_template_id_8318c408_render","_06vue_type_template_id_8318c408_staticRenderFns","_06vue_type_script_lang_js_CID","_06vue_type_script_lang_js_code","_06vue_type_script_lang_js_validate","nodePrev","computerNode","computerNodePrev","treeNode","computerNodePrevCid","nodePrevCid","nodeCid","_06vue_type_script_lang_js_","_06_default","_06_exercise_default","Blog_06vue_type_script_lang_js_","_06_component","Blog_06","_07vue_type_template_id_443725d6_render","_07vue_type_template_id_443725d6_staticRenderFns","_07vue_type_script_lang_js_shallowEqualArrays","_07vue_type_script_lang_js_CID","_07vue_type_script_lang_js_code","_07vue_type_script_lang_js_validate","returnValue","returnedCids","item","_07vue_type_script_lang_js_modules","_07vue_type_script_lang_js_","_07_default","_07_exercise_default","Blog_07vue_type_script_lang_js_","_07_component","Blog_07","use","vue_router_esm","routes","router","scrollBehavior","from","x","y","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Button_vue_vue_type_style_index_0_id_6f2f165f_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_7c441f4c_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"app.c80fe79c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"You want to create an overview page that lists your blog posts chronologically.\\n\\nYou *could* do it the same way as we did with tags. However, you would need to update that page (create a new node) every time you added a new blog post. It sounds wasteful to create new nodes with only small changes.\\n\\nThere’s a better way! Whenever you create a new blog post, you can link to the previous one directly. You can walk those links to create the overview page dynamically (which we’ll do in the next exercise).\\n\\nWe know the CID of a blog post as soon as it is stored in IPLD. We can use that CID to link from newer blog posts to older ones.\\n\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Explorer.vue?vue&type=style&index=0&id=d9fc3ea4&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Explorer.vue?vue&type=style&index=0&id=d9fc3ea4&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lesson.vue?vue&type=style&index=0&id=63049894&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lesson.vue?vue&type=style&index=0&id=63049894&scoped=true&lang=css&\"","module.exports = \"You can read data from deeply nested objects using path queries.\\n\\n```javascript\\nlet cid = await ipfs.dag.put({\\n  my: {\\n    deep: {\\n      obj: 'is cool'\\n    }\\n  }\\n})\\n\\nconsole.log(await ipfs.dag.get(cid, '/my/deep/obj'))\\n/* prints {value: 'is cool', remainderPath: ''} */\\n```\\n\\n`ipfs.dag.get()` allows queries using IPLD paths.\\nThese queries return an object containing the value of the query and any remaining path that was unresolved.\\n\\nThe cool thing about this API is that it can also traverse through links.\\n\\n```javascript\\nlet cid = await ipfs.dag.put({foo: 'bar'})\\nlet cid2 = await ipfs.dag.put({\\n  my: {\\n    other: {'/': cid.toBaseEncodedString()}\\n  }\\n})\\n\\nconsole.log(await ipfs.dag.get(cid2, '/my/other/foo'))\\n/* prints {value: 'bar', remainderPath: ''} */\\n```\\n\"","module.exports = \"Create a new blog post which is authored by Sam, has content about `dogs`, and is tagged as `funny` and `hobby`. Return the CID of that new blog post.\\n\"","module.exports = \"Everything that is stored in IPLD has an associated CID. That CID is constructed by hashing the data itself. If the same hash and encoding is used, then the same data will result in the same CID. This means that as soon as you edit data and store it, it will have a new CID. The old data won’t be overridden; it’s still there.\\n\\nBefore modifying the code, please open the developer tools in your browser and submit the code. You’ll see the CIDs of the blog posts in the console. When you look at the console again after you’ve modified the code, you’ll see the CIDs have changed.\\n\\nAnother common thing in blogs is tagging. Let’s modify the blog posts again and add some tags.\\n\"","module.exports = \"With every blog post linked together, we can return all of them with only the CID of the last.\\n\\nThe `prev` fields contains a link to the previous blog post. You can use that CID and the `ipfs.dag.get()` API to get the previous blog.\\n\\nNote: the `ipfs.dag.get()` API returns an object with a `value` attribute which is the node you want. Also, **links will be binary encoded**, so if you want them to be CID instances you'll need to use the `cid` module.\\n\\n```javascript\\nlet cid = new CID((await ipfs.dag.get(someCid)).value.linkName['/'])\\n```\\n\\nThis kind of traversal could be used to create an overview page that lists all blog posts.\\n\"","module.exports = \"In the code below, introduce a new field named `prev` in our blog posts. This field links to the previous blog post.\\n\\nLink the blog posts in chronological order. The oldest one is the one about trees, then there’s the one about computers. The one about `dogs` is the latest one. Once you’ve updated them, return the CID of the blog post about `dogs`.\\n\"","module.exports = \"In order to make the DAG (Directed Acyclic Graph) a bit more interesting, we will add a new blog post. It follows the same structure as the existing ones.\\n\"","module.exports = __webpack_public_path__ + \"img/ipfs-illustrations-how-3.334c34a9.svg\";","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","module.exports = \"**CID** - Content Identifier. An unique address for a block of data in IPFS that is derived from it's content.\\n\"","module.exports = __webpack_public_path__ + \"img/ipld.726682d6.svg\";","module.exports = \"The previously created blog post about dogs is completely disconnected from the others. Now, update the nodes that represent the tag cloud.\\n\"","module.exports = \"Modify the two existing blog posts and add a new field `author` that links to the author of the blog post. The post about trees was authored by Sam, while Nat wrote the post about computers. Remember to use `toBaseEncodedString()` to make the CID links.\\n\"","module.exports = \"Insert those new tag objects into IPLD via `ipld.dag.put()` and return the two resulting CIDs as array.\\n\"","module.exports = __webpack_public_path__ + \"img/ipfs-illustrations-how-4.374b2b50.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  width: 100%;\n}\npre {\n  overflow: auto;\n}\n.focus-outline:focus {\n  outline: 0;\n  box-shadow: 0 0 0 .2rem rgba(201, 210, 215, .4);\n}\n.code, code {\n  border-radius: 3px;\n  background-color: rgba(27,31,35,0.05);\n  padding: 0.1rem 0.3rem 0.15rem;\n  margin: 0 -0.1rem;\n  font-size: 85%;\n  font-family: SFMono-Regular, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace\n}\npre code {\n  margin: 0.5rem 0;\n  padding: 0.6rem 0.8rem;\n  display: block;\n  font-size: 12px;\n}\n.fill-current {\n  fill: currentColor;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=15d41714&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_vm._m(0),_vm._m(1),_c('section',{staticClass:\"db bt border-aqua bw4 relative\"},[_c('label',{staticClass:\"absolute ttu f6 fw5 white\",staticStyle:{\"top\":\"-15px\",\"left\":\"91px\"}},[_vm._v(\"\\n      TOPICS\\n    \")]),_c('div',{staticClass:\"flex items-start pv4\"},[_vm._m(2),_c('div',{staticClass:\"w-100 w-50-ns measure-wide ph2 ph0-ns\"},[_c('h2',{staticClass:\"ma0 f3 fw5\"},[_vm._v(\"P2P data links with content addressing\")]),_c('p',{staticClass:\"f5 fw5 ma0 pt2 lh-copy measure-wide charcoal-muted\"},[_vm._v(\"\\n          Store, fetch, and create verifiable links between peer-hosted datasets with IPLD and CIDs. It’s graphs with friends!\\n        \")]),_c('ul',{staticClass:\"mv4 pa0 f5\",staticStyle:{\"list-style-type\":\"none\",\"background\":\"rgba(11, 58, 82, 5%)\"}},[_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/basics/01\",\"index\":\"1\",\"name\":\"Basic write\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/basics/02\",\"index\":\"2\",\"name\":\"Linking data\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/basics/03\",\"index\":\"3\",\"name\":\"Reading data in links\"}})],1)])]),_vm._m(3)])]),_c('section',{staticClass:\"db\"},[_c('div',{staticClass:\"flex items-start pv4\"},[_vm._m(4),_c('div',{staticClass:\"w-100 w-50-ns measure-wide ph2 ph0-ns\"},[_c('h2',{staticClass:\"ma0 f3 fw5 \"},[_vm._v(\"Blogging on the Decentralized Web\")]),_c('p',{staticClass:\"f5 fw5 ma0 pt2 lh-copy charcoal-muted\"},[_vm._v(\"\\n          Cool content addresses don't change.\\n        \")]),_c('ul',{staticClass:\"mv4 pa0 f5\",staticStyle:{\"list-style-type\":\"none\",\"background\":\"rgba(11, 58, 82, 5%)\"}},[_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/01\",\"index\":\"1\",\"name\":\"Basic linking\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/02\",\"index\":\"2\",\"name\":\"CIDs change\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/03\",\"index\":\"3\",\"name\":\"Multiple links\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/04\",\"index\":\"4\",\"name\":\"Bigger DAG\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/05\",\"index\":\"5\",\"name\":\"Keep building links\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/06\",\"index\":\"6\",\"name\":\"Chain of links\"}})],1),_c('li',[_c('ExerciseLink',{attrs:{\"to\":\"/blog/07\",\"index\":\"7\",\"name\":\"Hop through nodes\"}})],1)])]),_vm._m(5)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"flex items-center bg-navy white pv3\"},[_c('div',{staticClass:\"flex-none\"},[_c('div',{staticClass:\"ph2 ph4-ns\"},[_c('img',{staticStyle:{\"height\":\"66px\"},attrs:{\"src\":require(\"./ipfs-logo.svg\"),\"alt\":\"IPFS\"}})]),_c('div',{staticClass:\"header-text indent-1\"},[_c('h1',{staticClass:\"ma0 pt4 ttu fw4\"},[_c('span',{staticClass:\"green\"},[_vm._v(\"Proto\")]),_c('span',{staticClass:\"white\"},[_vm._v(\"school\")])]),_c('h2',{staticClass:\"ma0 fw5\"},[_vm._v(\"\\n          The interactive IPFS protocol workshop\\n        \")])])]),_c('div',{staticClass:\"flex-auto tc\"},[_c('img',{staticStyle:{\"height\":\"124px\"},attrs:{\"src\":require(\"./ipfs-illustrations-how-3.svg\"),\"alt\":\"\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"db bt border-aqua bw4\"},[_c('p',{staticClass:\"f4 fw5 lh-copy ma0 pv4 indent-1 measure-wide\"},[_c('strong',[_vm._v(\"Protoschool is a collection of workshops\")]),_vm._v(\" that help you learn about the\\n      IPFS protocol by writing code and solving challenges.\\n    \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-1 flex-none tc\"},[_c('h1',{staticClass:\"ma0 f3 fw6 pb2\"},[_vm._v(\"IPLD\")]),_c('img',{staticStyle:{\"height\":\"54px\"},attrs:{\"src\":require(\"./ipld.svg\"),\"alt\":\"\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dn db-ns flex-auto tc\"},[_c('img',{attrs:{\"src\":require(\"./ipfs-illustrations-how-1.svg\"),\"alt\":\"\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-1 flex-none tc\"},[_c('h1',{staticClass:\"ma0 f3 fw6 pb2\"},[_vm._v(\"IPLD\")]),_c('img',{staticStyle:{\"height\":\"54px\"},attrs:{\"src\":require(\"./ipld.svg\"),\"alt\":\"\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dn db-ns flex-auto tc\"},[_c('img',{attrs:{\"src\":require(\"./ipfs-illustrations-how-4.svg\"),\"alt\":\"\"}})])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('router-link',{staticClass:\"link db pa3 bb b--white green hover-bg-washed-yellow\",attrs:{\"to\":_vm.to}},[_c('span',{staticClass:\"green ttu f6 pr3\"},[_vm._v(\"Exercise \"+_vm._s(_vm.index))]),_c('span',{staticClass:\"navy fw5\"},[_vm._v(_vm._s(_vm.name))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <router-link :to=\"to\" class=\"link db pa3 bb b--white green hover-bg-washed-yellow\">\n    <span class=\"green ttu f6 pr3\">Exercise {{index}}</span>\n    <span class=\"navy fw5\">{{name}}</span>\n  </router-link>\n</template>\n\n<script>\nexport default {\n  name: 'ExerciseLink',\n  props: [\n    'to',\n    'index',\n    'name'\n  ]\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExerciseLink.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExerciseLink.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ExerciseLink.vue?vue&type=template&id=7fa7db93&\"\nimport script from \"./ExerciseLink.vue?vue&type=script&lang=js&\"\nexport * from \"./ExerciseLink.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"home\">\n    <header class=\"flex items-center bg-navy white pv3\">\n      <div class=\"flex-none\">\n        <div class=\"ph2 ph4-ns\">\n          <img src=\"./ipfs-logo.svg\" alt=\"IPFS\" style=\"height: 66px\" />\n        </div>\n        <div class=\"header-text indent-1\">\n          <h1 class=\"ma0 pt4 ttu fw4\">\n            <span class=\"green\">Proto</span>\n            <span class=\"white\">school</span>\n          </h1>\n          <h2 class=\"ma0 fw5\">\n            The interactive IPFS protocol workshop\n          </h2>\n        </div>\n      </div>\n      <div class=\"flex-auto tc\">\n        <img src=\"./ipfs-illustrations-how-3.svg\" alt=\"\" style=\"height: 124px;\"/>\n      </div>\n    </header>\n    <section class=\"db bt border-aqua bw4\">\n      <p class=\"f4 fw5 lh-copy ma0 pv4 indent-1 measure-wide\">\n        <strong>Protoschool is a collection of workshops</strong> that help you learn about the\n        IPFS protocol by writing code and solving challenges.\n      </p>\n    </section>\n    <section class=\"db bt border-aqua bw4 relative\">\n      <label class=\"absolute ttu f6 fw5 white\" style=\"top: -15px; left: 91px;\">\n        TOPICS\n      </label>\n      <div class=\"flex items-start pv4\">\n        <div class=\"section-1 flex-none tc\">\n          <h1 class=\"ma0 f3 fw6 pb2\">IPLD</h1>\n          <img src=\"./ipld.svg\" alt=\"\" style=\"height: 54px\"/>\n        </div>\n        <div class=\"w-100 w-50-ns measure-wide ph2 ph0-ns\">\n          <h2 class=\"ma0 f3 fw5\">P2P data links with content addressing</h2>\n          <p class=\"f5 fw5 ma0 pt2 lh-copy measure-wide charcoal-muted\">\n            Store, fetch, and create verifiable links between peer-hosted datasets with IPLD and CIDs. It’s graphs with friends!\n          </p>\n          <ul class=\"mv4 pa0 f5\" style=\"list-style-type: none; background: rgba(11, 58, 82, 5%)\">\n            <li>\n              <ExerciseLink to=\"/basics/01\" index=\"1\" name=\"Basic write\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/basics/02\" index=\"2\" name=\"Linking data\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/basics/03\" index=\"3\" name=\"Reading data in links\" />\n            </li>\n          </ul>\n        </div>\n        <div class=\"dn db-ns flex-auto tc\">\n          <img src=\"./ipfs-illustrations-how-1.svg\" alt=\"\">\n        </div>\n      </div>\n    </section>\n    <section class=\"db\">\n      <div class=\"flex items-start pv4\">\n        <div class=\"section-1 flex-none tc\">\n          <h1 class=\"ma0 f3 fw6 pb2\">IPLD</h1>\n          <img src=\"./ipld.svg\" alt=\"\" style=\"height: 54px\"/>\n        </div>\n        <div class=\"w-100 w-50-ns measure-wide ph2 ph0-ns\">\n          <h2 class=\"ma0 f3 fw5 \">Blogging on the Decentralized Web</h2>\n          <p class=\"f5 fw5 ma0 pt2 lh-copy charcoal-muted\">\n            Cool content addresses don't change.\n          </p>\n          <ul class=\"mv4 pa0 f5\" style=\"list-style-type: none; background: rgba(11, 58, 82, 5%)\">\n            <li>\n              <ExerciseLink to=\"/blog/01\" index=\"1\" name=\"Basic linking\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/blog/02\" index=\"2\" name=\"CIDs change\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/blog/03\" index=\"3\" name=\"Multiple links\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/blog/04\" index=\"4\" name=\"Bigger DAG\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/blog/05\" index=\"5\" name=\"Keep building links\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/blog/06\" index=\"6\" name=\"Chain of links\" />\n            </li>\n            <li>\n              <ExerciseLink to=\"/blog/07\" index=\"7\" name=\"Hop through nodes\" />\n            </li>\n          </ul>\n        </div>\n        <div class=\"dn db-ns flex-auto tc\">\n          <img src=\"./ipfs-illustrations-how-4.svg\" alt=\"\">\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport ExerciseLink from './ExerciseLink'\n\nexport default {\n  name: 'home',\n  components: {\n    ExerciseLink\n  }\n}\n</script>\n\n<style scoped>\n.header-text {\n  padding-bottom: 31px;\n}\n.header-text h1 {\n  font-size: 36px;\n}\n.header-text h2 {\n  font-size: 15px;\n}\n.indent-1 {\n  padding-left: 1rem;\n}\n.section-1 {\n  display: none;\n}\n@media screen and (min-width: 530px) {\n  .header-text h1 {\n    font-size: 50px;\n  }\n  .header-text h2 {\n    font-size: 21px;\n  }\n  .indent-1 {\n    padding-left: 93px;\n  }\n  .section-1 {\n    display: block;\n    width: 93px;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=7c441f4c&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=7c441f4c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7c441f4c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-01\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"concepts\":_vm.concepts,\"lessonTitle\":\"Basic write\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('div',{staticClass:\"flex-l items-start bt border-aqua bw4\"},[_c('section',{staticClass:\"pv3 indent-1\"},[_c('h1',{staticClass:\"f3 measure-wide\"},[_vm._v(_vm._s(_vm.lessonTitle))]),_c('div',{staticClass:\"lesson-text lh-copy measure-wide\",domProps:{\"innerHTML\":_vm._s(_vm.parsedText)}})]),(_vm.concepts)?_c('section',{staticClass:\"dn db-ns ba border-green ph4 ml3 ml5-l mt5 mb3 mr3 measure\",staticStyle:{\"background\":\"rgba(105, 196, 205, 10%)\"}},[_c('h2',{staticClass:\"f5 fw2 green mt0 nb1 pt3\"},[_vm._v(\"Useful concepts\")]),_c('div',{staticClass:\"f6 lh-copy\",domProps:{\"innerHTML\":_vm._s(_vm.parsedConcepts)}})]):_vm._e()]),_c('section',{staticClass:\"indent-1 exercise pb4 pt3 ph3 ph4-l mb5 mr5 flex flex-column\",class:{expand: _vm.expandExercise},staticStyle:{\"background\":\"#F6F7F9\"}},[_c('div',{staticClass:\"flex-none\"},[_c('h2',{staticClass:\"mt0 mb2 green fw4 fill-current\"},[_c('svg',{staticStyle:{\"vertical-align\":\"-1px\"},attrs:{\"viewBox\":\"0 0 12 12\",\"width\":\"12\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('circle',{attrs:{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"6\"}})]),_c('span',{staticClass:\"green ttu f6 pl2 pr3\"},[_vm._v(\"Exercise \"+_vm._s(_vm.lessonNumber))]),_c('span',{staticClass:\"navy fw5 f5\"},[_vm._v(_vm._s(_vm.lessonTitle))]),_c('div',{staticClass:\"fr\"},[(_vm.expandExercise)?_c('button',{staticClass:\"b--transparent bg-transparent green hover-green-muted pointer focus-outline\",attrs:{\"title\":\"go smol\"},on:{\"click\":_vm.toggleExpandExercise}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 32 32\"}},[_c('path',{attrs:{\"d\":\"M16 4 L28 4 L28 16 L24 12 L20 16 L16 12 L20 8z M4 16 L8 20 L12 16 L16 20 L12 24 L16 28 L4 28z\"}})])]):_c('button',{staticClass:\"b--transparent bg-transparent charcoal-muted hover-green pointer focus-outline\",attrs:{\"title\":\"embiggen the exercise\"},on:{\"click\":_vm.toggleExpandExercise}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"16\",\"height\":\"16\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 32 32\"}},[_c('path',{attrs:{\"d\":\"M16 4 L28 4 L28 16 L24 12 L20 16 L16 12 L20 8z M4 16 L8 20 L12 16 L16 20 L12 24 L16 28 L4 28z\"}})])])])]),(_vm.exercise)?_c('div',{staticClass:\"lh-copy\",domProps:{\"innerHTML\":_vm._s(_vm.parsedExercise)}}):_vm._e()]),_c('div',{staticClass:\"bg-white flex-auto\",staticStyle:{\"height\":\"100%\"}},[_c('MonacoEditor',{staticClass:\"editor\",attrs:{\"srcPath\":\".\",\"height\":_vm.editorHeight,\"options\":_vm.options,\"code\":_vm.code,\"theme\":\"vs\",\"language\":\"javascript\"},on:{\"mounted\":_vm.onMounted,\"codeChange\":_vm.onCodeChange}})],1),_c('div',{staticClass:\"flex-none\"},[_c('div',{staticClass:\"pv2\"},[(_vm.output.test)?_c('div',_vm._b({},'div',_vm.output.test,false),[(_vm.output.test.error)?_c('div',{staticClass:\"lh-copy pv2 ph3 bg-red white\"},[_vm._v(\"\\n            Error: \"+_vm._s(_vm.output.test.error.message)+\"\\n          \")]):_vm._e(),(_vm.output.test.fail)?_c('div',{staticClass:\"lh-copy pv2 ph3 bg-red white\"},[_vm._v(\"\\n            \"+_vm._s(_vm.output.test.fail)+\"\\n          \")]):_vm._e(),(_vm.output.test.success)?_c('div',{staticClass:\"lh-copy pv2 ph3 bg-green white\"},[_vm._v(\"\\n            \"+_vm._s(_vm.output.test.success)+\"\\n            \"),(_vm.output.test.cid)?_c('a',{staticClass:\"link fw7 underline-hover dib ph2 mh2 white\",attrs:{\"target\":\"explore-ipld\",\"href\":_vm.exploreIpldUrl}},[_vm._v(\"\\n              View in IPLD Explorer\\n            \")]):_vm._e()]):_vm._e()]):_c('div',{staticClass:\"lh-copy pv2 ph3\"},[_vm._v(\"\\n          Update the code to complete the exercise. Click \"),_c('strong',[_vm._v(\"submit\")]),_vm._v(\" to check your answer.\\n        \")])]),_c('div',{staticClass:\"pt3 ph2 tr\"},[(_vm.output.test && _vm.output.test.success)?_c('div',[_c('Button',{staticClass:\"bg-aqua white\",attrs:{\"click\":_vm.next}},[_vm._v(\"Next\")])],1):_c('div',[_c('Button',{staticClass:\"bg-green white\",attrs:{\"click\":_vm.run}},[_vm._v(\"Submit\")])],1)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"bg-navy pa3 flex items-center justify-around\"},[_c('a',{staticClass:\"dn db-ns link flex-auto w-third-ns\",attrs:{\"href\":\"/#/\"}},[_c('img',{staticClass:\"ml3-ns\",staticStyle:{\"height\":\"66px\"},attrs:{\"src\":require(\"./home/ipfs-logo.svg\"),\"alt\":\"IPFS\"}})]),_c('a',{staticClass:\"link ma0 ttu f3 f1-ns fw4 w-third-ns tc\",attrs:{\"href\":\"/#/\"}},[_c('span',{staticClass:\"green\"},[_vm._v(\"Proto\")]),_c('span',{staticClass:\"white\"},[_vm._v(\"school\")])]),_c('div',{staticClass:\"w-third-ns tr dn db-ns\"},[_c('img',{staticStyle:{\"height\":\"50px\"},attrs:{\"src\":require(\"./home/ipfs-illustrations-how-3.svg\"),\"alt\":\"\"}})])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"explorer\"},[_c('iframe',{attrs:{\"src\":_vm.src}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template>\n  <div class=\"explorer\">\n    <iframe :src=\"src\">\n    </iframe>\n  </div>\n</template>\n\n<script>\nexport default {\n\n  data: self => {\n    let cid = self.$attrs.cid\n    cid = cid.toBaseEncodedString ? cid.toBaseEncodedString() : cid\n    let src = `https://ipfs.io/ipfs/QmeznoNAoUcQdCFEEz4ktv4zLfYYyhVNin28Frsv8LLxCb/?embed=true#/explore/${cid}`\n    return {src}\n  }\n}\n</script>\n\n<style scoped>\niframe {\n  width: 100%;\n  height: 50vh;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Explorer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Explorer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Explorer.vue?vue&type=template&id=d9fc3ea4&scoped=true&\"\nimport script from \"./Explorer.vue?vue&type=script&lang=js&\"\nexport * from \"./Explorer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Explorer.vue?vue&type=style&index=0&id=d9fc3ea4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d9fc3ea4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"avenir dib v-mid fw7 nowrap lh-copy bn br1 pv2 ph3 pointer focus-outline\",on:{\"click\":_vm.click}},[_vm._t(\"default\",[_vm._v(\"Submit\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <button\n    v-on:click=\"click\"\n    class=\"avenir dib v-mid fw7 nowrap lh-copy bn br1 pv2 ph3 pointer focus-outline\">\n    <slot>Submit</slot>\n  </button>\n</template>\n\n<script>\nexport default {\n  props: {\n    click: {\n      type: Function,\n      required: true\n    }\n  }\n}\n</script>\n\n<style scoped>\n  button {\n    opacity: 0.9;\n    min-width:120px;\n  }\n  button:hover {\n    opacity: 1;\n  }\n\n  button:active {\n    opacity: 0.95;\n    box-shadow: inset 0 0 8px rgba(0,0,0,0.3);\n  }\n\n  button:disabled {\n    opacity: 0.8;\n    box-shadow: initial;\n    cursor: default;\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Button.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Button.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Button.vue?vue&type=template&id=6f2f165f&scoped=true&\"\nimport script from \"./Button.vue?vue&type=script&lang=js&\"\nexport * from \"./Button.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Button.vue?vue&type=style&index=0&id=6f2f165f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6f2f165f\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <header class=\"bg-navy pa3 flex items-center justify-around\">\n      <a href='/#/' class=\"dn db-ns link flex-auto w-third-ns\">\n        <img src=\"./home/ipfs-logo.svg\" alt=\"IPFS\" style=\"height: 66px\" class=\"ml3-ns\"/>\n      </a>\n      <a href='/#/' class=\"link ma0 ttu f3 f1-ns fw4 w-third-ns tc\">\n        <span class=\"green\">Proto</span>\n        <span class=\"white\">school</span>\n      </a>\n      <div class=\"w-third-ns tr dn db-ns\">\n        <img src=\"./home/ipfs-illustrations-how-3.svg\" alt=\"\" style=\"height: 50px\">\n      </div>\n    </header>\n\n    <div class=\"flex-l items-start bt border-aqua bw4\">\n      <section class=\"pv3 indent-1\">\n        <h1 class=\"f3 measure-wide\">{{lessonTitle}}</h1>\n        <div class=\"lesson-text lh-copy measure-wide\" v-html=\"parsedText\"></div>\n      </section>\n      <section v-if=\"concepts\" class='dn db-ns ba border-green ph4 ml3 ml5-l mt5 mb3 mr3 measure' style=\"background: rgba(105, 196, 205, 10%)\">\n        <h2 class=\"f5 fw2 green mt0 nb1 pt3\">Useful concepts</h2>\n        <div class='f6 lh-copy' v-html=\"parsedConcepts\"></div>\n      </section>\n    </div>\n\n    <section v-bind:class=\"{expand: expandExercise}\" class=\"indent-1 exercise pb4 pt3 ph3 ph4-l mb5 mr5 flex flex-column\" style=\"background: #F6F7F9;\">\n      <div class=\"flex-none\">\n        <h2 class=\"mt0 mb2 green fw4 fill-current\">\n          <svg viewBox=\"0 0 12 12\" width='12' xmlns=\"http://www.w3.org/2000/svg\" style='vertical-align:-1px'>\n            <circle cx=\"6\" cy=\"6\" r=\"6\"/>\n          </svg>\n          <span class=\"green ttu f6 pl2 pr3\">Exercise {{lessonNumber}}</span>\n          <span class=\"navy fw5 f5\">{{lessonTitle}}</span>\n          <div class=\"fr\">\n            <button\n              v-if=\"expandExercise\"\n              title=\"go smol\"\n              v-on:click=\"toggleExpandExercise\"\n              class='b--transparent bg-transparent green hover-green-muted pointer focus-outline'>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 32 32\"><path d=\"M16 4 L28 4 L28 16 L24 12 L20 16 L16 12 L20 8z M4 16 L8 20 L12 16 L16 20 L12 24 L16 28 L4 28z\"></path></svg>\n            </button>\n            <button\n              v-else\n              v-on:click=\"toggleExpandExercise\"\n              title='embiggen the exercise'\n              class='b--transparent bg-transparent charcoal-muted hover-green pointer focus-outline'>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 32 32\"><path d=\"M16 4 L28 4 L28 16 L24 12 L20 16 L16 12 L20 8z M4 16 L8 20 L12 16 L16 20 L12 24 L16 28 L4 28z\"></path></svg>\n            </button>\n          </div>\n        </h2>\n        <div v-if=\"exercise\" v-html=\"parsedExercise\" class='lh-copy'></div>\n      </div>\n      <div class=\"bg-white flex-auto\" style='height:100%;'>\n        <MonacoEditor\n          class=\"editor\"\n          srcPath=\".\"\n          :height=\"editorHeight\"\n          :options=\"options\"\n          :code=\"code\"\n          theme=\"vs\"\n          language=\"javascript\"\n          @mounted=\"onMounted\"\n          @codeChange=\"onCodeChange\">\n        </MonacoEditor>\n      </div>\n      <div class='flex-none'>\n        <div class=\"pv2\">\n          <div v-if=\"output.test\" v-bind=\"output.test\">\n            <div class=\"lh-copy pv2 ph3 bg-red white\" v-if=\"output.test.error\">\n              Error: {{output.test.error.message}}\n            </div>\n            <div class=\"lh-copy pv2 ph3 bg-red white\" v-if=\"output.test.fail\">\n              {{output.test.fail}}\n            </div>\n            <div class=\"lh-copy pv2 ph3 bg-green white\" v-if=\"output.test.success\">\n              {{output.test.success}}\n              <a v-if=\"output.test.cid\"\n              class=\"link fw7 underline-hover dib ph2 mh2 white\"  target='explore-ipld' :href='exploreIpldUrl'>\n                View in IPLD Explorer\n              </a>\n            </div>\n          </div>\n          <div class=\"lh-copy pv2 ph3\" v-else>\n            Update the code to complete the exercise. Click <strong>submit</strong> to check your answer.\n          </div>\n        </div>\n        <div class=\"pt3 ph2 tr\">\n          <div v-if=\"output.test && output.test.success\">\n            <Button v-bind:click=\"next\" class=\"bg-aqua white\">Next</Button>\n          </div>\n          <div v-else>\n            <Button v-bind:click=\"run\" class=\"bg-green white\">Submit</Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport 'highlight.js/styles/github.css'\nimport Vue from 'vue'\nimport MonacoEditor from 'vue-monaco-editor'\nimport Explorer from './Explorer.vue'\nimport Button from './Button.vue'\nconst IPFS = require('ipfs')\nconst CID = require('cids')\nconst marked = require('marked')\n\nconst hljs = require('highlight.js/lib/highlight.js')\nhljs.registerLanguage('js', require('highlight.js/lib/languages/javascript'))\nhljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'))\nhljs.registerLanguage('json', require('highlight.js/lib/languages/json'))\n\nmarked.setOptions({\n  highlight: code => {\n    return hljs.highlightAuto(code).value\n  }\n})\n\nconst _eval = async (text, ipfs, modules = {}) => {\n  await new Promise(resolve => ipfs.on('ready', resolve))\n\n  let fn\n  let result\n  try {\n    // eslint-disable-next-line\n    fn = new Function('ipfs', 'require', text)\n  } catch (e) {\n    result = {error: e}\n    return result\n  }\n\n  let require = name => {\n    if (!modules[name]) throw new Error(`Cannot find modules: ${name}`)\n    return modules[name]\n  }\n  try {\n    result = await fn(ipfs, require)()\n  } catch (e) {\n    result = {error: e}\n  }\n  return result\n}\n\nconst defaultCode = `/* globals ipfs */\n\nconst run = async () => {\n  // your code goes here!\n  // example: ipfs.dag.put({hello: 'world'})\n}\n\nreturn run\n\n`\nlet oldIPFS\n\nexport default {\n  components: {\n    MonacoEditor,\n    Explorer,\n    Button\n  },\n  data: self => {\n    return {\n      text: self.$attrs.text,\n      exercise: self.$attrs.exercise,\n      concepts: self.$attrs.concepts,\n      code: self.$attrs.code || defaultCode,\n      parsedText: marked(self.$attrs.text),\n      parsedExercise: marked(self.$attrs.exercise || ''),\n      parsedConcepts: marked(self.$attrs.concepts || ''),\n      lessonTitle: self.$attrs.lessonTitle,\n      output: self.output,\n      IPFS,\n      expandExercise: false,\n      options: {\n        selectOnLineNumbers: false,\n        lineNumbersMinChars: 3,\n        scrollBeyondLastLine: false,\n        automaticLayout: true\n      }\n    }\n  },\n  computed: {\n    exploreIpldUrl: function () {\n      let cid = this.output.test && this.output.test.cid && this.output.test.cid.toBaseEncodedString()\n      cid = cid || ''\n      return `https://ipfs.io/ipfs/QmYJETQ15RAnKXoJxqpXzcvQ2DuQA35UHwJBTjTPCSs9Ky/#/explore/${cid}`\n    },\n    lessonNumber: function () {\n      return this.$route.path.slice(this.$route.path.lastIndexOf('/') + 1)\n    },\n    editorHeight: function () {\n      if (this.expandExercise) {\n        return undefined\n      } else {\n        const lineHeight = 18\n        // In compact view show at least 12 lines, and at most 25 lines.\n        const lines = Math.min(Math.max(this.code.split('\\n').length, 12), 25)\n        const height = lines * lineHeight\n        return height\n      }\n    }\n  },\n  beforeCreate: function () {\n    this.output = {}\n  },\n  methods: {\n    run: async function () {\n      if (oldIPFS) {\n        oldIPFS.stop()\n        oldIPFS = null\n      }\n      let output = this.output\n      let ipfs = this.createIPFS()\n      let code = this.editor.getValue()\n      let modules = {}\n      if (this.$attrs.modules) modules = this.$attrs.modules\n      let result = await _eval(code, ipfs, modules)\n      if (result && result.error) {\n        Vue.set(output, 'test', result)\n        return\n      }\n      let test = await this.$attrs.validate(result, ipfs)\n      Vue.set(output, 'test', test)\n      if (CID.isCID(result)) {\n        oldIPFS = ipfs\n        Vue.set(output.test, 'cid', result)\n      } else {\n        ipfs.stop()\n      }\n    },\n    createIPFS: function () {\n      if (this.$attrs.createIPFS) {\n        return this.$attrs.createIPFS()\n      } else {\n        return new IPFS({repo: Math.random().toString()})\n      }\n    },\n    onMounted: function (editor) {\n      this.editor = editor\n    },\n    onCodeChange: function (editor) {\n      // console.log(editor.getValue())\n    },\n    next: function () {\n      Vue.set(this.output, 'test', null)\n      let current = this.lessonNumber\n      let next = (parseInt(current) + 1).toString().padStart(2, '0')\n      this.$router.push({path: next})\n    },\n    toggleExpandExercise: function () {\n      this.expandExercise = !this.expandExercise\n    }\n  }\n}\n</script>\n\n<style scoped>\n.editor {\n  height: 100%;\n  min-height: 15rem;\n}\n.exercise {\n  overflow: hidden;\n  max-width: 100%;\n  width: 900px;\n}\n.exercise.expand {\n  height: 100vh;\n  width: initial;\n  margin: 0;\n  width: auto;\n  position: fixed;\n  top:0;\n  left: 0;\n  right:0;\n}\n.indent-1 {\n  margin-left: 1rem;\n}\n@media screen and (min-width: 60rem) {\n  .indent-1 {\n    margin-left: 93px;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lesson.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Lesson.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Lesson.vue?vue&type=template&id=63049894&scoped=true&\"\nimport script from \"./Lesson.vue?vue&type=script&lang=js&\"\nexport * from \"./Lesson.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Lesson.vue?vue&type=style&index=0&id=63049894&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"63049894\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"lesson-01\">\n    <Lesson :text=\"text\" :validate=\"validate\"\n            :exercise=\"exercise\" :concepts=\"concepts\"\n            lessonTitle=\"Basic write\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './01.md'\nimport concepts from './01-concepts.md'\nimport exercise from './01-exercise.md'\nconst CID = require('cids')\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  if (!CID.isCID(result)) {\n    return {fail: 'Did not return a valid CID instance.'}\n  }\n  let hash = 'zdpuApm55Qv2zRxb3KKjVUxhQSw2r4a7jeiDV7163yCQnfivy'\n  if (result.toBaseEncodedString() === hash) {\n    return {success: 'All works!'}\n  } else {\n    let obj = await ipfs.dag.get(result)\n    let expected = JSON.stringify({test: 1})\n    let got = JSON.stringify(obj.value)\n    let fail = `Was expecting \"${expected}\" but got \"${got}\"`\n    return {fail}\n  }\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return { text, validate, exercise, concepts }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./01.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./01.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./01.vue?vue&type=template&id=09d52a20&\"\nimport script from \"./01.vue?vue&type=script&lang=js&\"\nexport * from \"./01.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-02\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"modules\":_vm.modules,\"exercise\":_vm.exercise,\"concepts\":_vm.concepts,\"lessonTitle\":\"Linking data\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-02\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :modules=\"modules\"\n            :exercise=\"exercise\"\n            :concepts=\"concepts\"\n            lessonTitle=\"Linking data\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './02.md'\nimport concepts from './02-concepts.md'\nimport exercise from './02-exercise.md'\nconst CID = require('cids')\n\nlet code = `/* globals ipfs */\n\nconst run = async () => {\n  let cid = await ipfs.dag.put({test: 1})\n  // your code goes here\n}\n\nreturn run\n`\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  if (!CID.isCID(result)) {\n    return {fail: 'Did not return a valid CID instance.'}\n  }\n  let hash = 'zdpuAoPanArLvuFtuvmLYuSvp8zE8wuKSMZUkMN8Y1PaHLvKP'\n  if (result.toBaseEncodedString() === hash) {\n    return {success: 'All works!'}\n  } else {\n    let obj = await ipfs.dag.get(result)\n    let expected = JSON.stringify({bar: {'/': hash}})\n    let got = JSON.stringify(obj.value)\n    let fail = `Was expecting \"${expected}\" but got \"${got}\"`\n    return {fail}\n  }\n}\n\nlet modules = {cids: require('cids')}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code, text, validate, modules, exercise, concepts\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./02.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./02.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./02.vue?vue&type=template&id=9f1b4f5e&\"\nimport script from \"./02.vue?vue&type=script&lang=js&\"\nexport * from \"./02.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-03\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"modules\":_vm.modules,\"exercise\":_vm.exercise,\"lessonTitle\":\"Reading data in links\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-03\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :modules=\"modules\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Reading data in links\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './03.md'\nimport exercise from './03-exercise.md'\n\nlet code = `/* globals ipfs */\n\nconst run = async () => {\n  let cid = await ipfs.dag.put({test: 1})\n  let cid2 = await ipfs.dag.put(\n    {bar: {'/': cid.toBaseEncodedString()}}\n  )\n  /* your code goes here */\n}\n\nreturn run\n`\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  // TODO: validate ipfs.dag.get call\n\n  if (result === 1) {\n    return {success: 'Great job, got 1.'}\n  }\n\n  if (result.value === 1 && result.remainderPath === '') {\n    return {success: 'Great job!'}\n  } else {\n    let expected = JSON.stringify({value: 1, remainderPath: ''})\n    let got = JSON.stringify(result)\n    let fail = `Was expecting \"${expected}\" but got \"${got}\".`\n    return {fail}\n  }\n}\n\nlet modules = {cids: require('cids')}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code, text, validate, modules, exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./03.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./03.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./03.vue?vue&type=template&id=9ea30442&\"\nimport script from \"./03.vue?vue&type=script&lang=js&\"\nexport * from \"./03.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-01\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"lessonTitle\":\"Basic linking\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","'use strict'\n\nconst CID = require('cids')\n\n// Stringify JSON with space in between\nconst stringify = (json) => JSON.stringify(json, null, ' ').replace('\\n', '')\n\n// Validate that a give array consists of number of CIDs\nconst validateArrayOfCids = (result, size) => {\n  if (!Array.isArray(result) || result.length !== size) {\n    return {fail: `You need to return an array of ${size} CIDs`}\n  }\n  const isCids = result.every(CID.isCID)\n  if (!isCids) {\n    return {fail: `Array elements need to be CIDs`}\n  }\n  return {success: ''}\n}\n\nexport default {\n  stringify,\n  validateArrayOfCids\n}\n","<template>\n  <div class=\"lesson-blog-01\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Basic linking\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './01.md'\nimport exercise from './01-exercise.md'\nimport utils from './utils.js'\nconst shallowEqualArrays = require('shallow-equal/arrays')\nconst CID = require('cids')\n\nconst code = `/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n\n  // Modify the blog posts below\n\n  const treePostCid = await ipfs.dag.put({content: \"trees\"})\n  const computerPostCid = await ipfs.dag.put({content: \"computers\"})\n\n  return [treePostCid, computerPostCid]\n}\n\nreturn run\n`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()}\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()}\n  })\n\n  return [treePostCid, computerPostCid]\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  const validatedArray = utils.validateArrayOfCids(result, 2)\n  if (validatedArray.fail) {\n    return validatedArray\n  }\n  const natCid = 'zdpuAyB57Xn8fuPvM8Gam5ycJTz6bgzLqtQBihyFuh5T7a6SK'\n  const samCid = 'zdpuAzUoWGnKe4p13YbexQrb5AMhnDWDCqJt2XyqVPU6DxS4m'\n  for (const cid of result) {\n    const obj = await ipfs.dag.get(cid)\n    const node = obj.value\n    if (node.author === undefined) {\n      return {fail: 'Blog posts need to have an `author` field.'}\n    }\n    if (node.author['/'] === undefined) {\n      return {fail: 'The value of `author` needs to be a link (`{\"/\": \"some-cid\"}`).'}\n    }\n    const nodeAuthor = new CID(node.author['/']).toBaseEncodedString()\n    if (![natCid, samCid].includes(nodeAuthor)) {\n      return {fail: 'You need to link to the CID of an author (Nat or Sam).'}\n    }\n    let expectedAuthor\n    switch (node.content) {\n      case 'trees':\n        expectedAuthor = samCid\n        break\n      case 'computers':\n        expectedAuthor = natCid\n        break\n    }\n    if (nodeAuthor !== expectedAuthor) {\n      return {fail: `The author of the \"${node.content}\" blog post (${nodeAuthor}) did not match the the expected author (${expectedAuthor}).`}\n    }\n  }\n  const expectedCids = ['zdpuAkSPEnmgR1rqKkzpFN5qfJshCQKqMaVtUSpQJAMLdw3KF',\n    'zdpuAxzw762rP3CXZpAsKagPFR2AyqmZU2sN8U1GuVCeoYUEo']\n  const resultCids = result.map((cid) => cid.toBaseEncodedString())\n  if (shallowEqualArrays(resultCids.sort(), expectedCids.sort())) {\n    return {success: 'All works!'}\n  } else {\n    return {fail: `The returned CIDs ${utils.stringify(resultCids)} did not match the expected CIDs ${utils.stringify(expectedCids)}.`}\n  }\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./01.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./01.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./01.vue?vue&type=template&id=018ab576&\"\nimport script from \"./01.vue?vue&type=script&lang=js&\"\nexport * from \"./01.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-02\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"lessonTitle\":\"CIDs change\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-blog-02\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :exercise=\"exercise\"\n            lessonTitle=\"CIDs change\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './02.md'\nimport exercise from './02-exercise.md'\nimport utils from './utils.js'\nconst shallowEqualArrays = require('shallow-equal/arrays')\n\nconst code = `/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n\n  // Modify the blog posts below\n\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()}\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()}\n  })\n\n  console.log('post about trees:', treePostCid.toBaseEncodedString())\n  console.log('post about computers:', computerPostCid.toBaseEncodedString())\n\n  return [treePostCid, computerPostCid]\n}\n\nreturn run`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n\n  return [treePostCid, computerPostCid]\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  const validatedArray = utils.validateArrayOfCids(result, 2)\n  if (validatedArray.fail) {\n    return validatedArray\n  }\n  for (const cid of result) {\n    const obj = await ipfs.dag.get(cid)\n    const node = obj.value\n    if (node.tags === undefined) {\n      return {fail: 'Blog posts need to have a `tags` field.'}\n    }\n    if (!Array.isArray(node.tags)) {\n      return {fail: 'The value of the `tags` field must be an array of strings.'}\n    }\n    const isStrings = node.tags.every((tag) => typeof tag === 'string')\n    if (!isStrings) {\n      return {fail: `Tags need to be strings.`}\n    }\n    let expectedTags\n    switch (node.content) {\n      case 'trees':\n        expectedTags = ['hobby', 'outdoor']\n        break\n      case 'computers':\n        expectedTags = ['hobby']\n        break\n    }\n    if (!shallowEqualArrays(node.tags.sort(), expectedTags.sort())) {\n      return {fail: `The tags of the \"${node.content}\" blog post ${utils.stringify(node.tags)} did not match the the expected tags ${utils.stringify(expectedTags)}.`}\n    }\n  }\n  // Don't check the CIDs as then the order of the tags would matter.\n  // But that order really doesn't matter.\n  return {success: 'All works!'}\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./02.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./02.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./02.vue?vue&type=template&id=7f4b54ee&\"\nimport script from \"./02.vue?vue&type=script&lang=js&\"\nexport * from \"./02.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-03\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"lessonTitle\":\"Multiple links\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-blog-03\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Multiple links\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './03.md'\nimport exercise from './03-exercise.md'\nimport utils from './utils.js'\nconst shallowEqualArrays = require('shallow-equal/arrays')\nconst CID = require('cids')\n\nconst code = `/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n\n  // Add your code here\n}\n\nreturn run`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return [outdoorTagCid, hobbyTagCid]\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  const validatedArray = utils.validateArrayOfCids(result, 2)\n  if (validatedArray.fail) {\n    return validatedArray\n  }\n  for (const cid of result) {\n    const obj = await ipfs.dag.get(cid)\n    const node = obj.value\n    if (node.tag === undefined) {\n      return {fail: 'Tag nodes need to have a `tag` field.'}\n    }\n    if (typeof node.tag !== 'string') {\n      return {fail: '`tag` field needs to be a string.'}\n    }\n    if (node.posts === undefined) {\n      return {fail: 'Tag nodes need to have a `posts` field.'}\n    }\n    if (!Array.isArray(node.posts)) {\n      return {fail: 'The value of the `posts` field must be an array of links.'}\n    }\n    const isLinks = node.posts.every((post) => '/' in post)\n    if (!isLinks) {\n      return {fail: 'The values of the `posts` array must be links.'}\n    }\n\n    const treePostCid = 'zdpuAri55PR9iW239ahcbnfkFU2TVyD5iLmqEFmwY634KZAJV'\n    const computerPostCid = 'zdpuAqaHPSosSZFRPe7u5q3yNqgg4JuvrLaUJxGamNPLhWivX'\n    let expectedPosts\n    switch (node.tag) {\n      case 'hobby':\n        expectedPosts = [treePostCid, computerPostCid]\n        break\n      case 'outdoor':\n        expectedPosts = [treePostCid]\n        break\n      default:\n        return {fail: `Wrong tag (${node.tag}). Did you mean \"hobby\" or \"outdoor\"?`}\n    }\n    const nodePosts = node.posts.map((post) => new CID(post['/']).toBaseEncodedString())\n    if (!shallowEqualArrays(nodePosts.sort(), expectedPosts.sort())) {\n      return {fail: `The posts of the tag \"${node.tag}\" ${utils.stringify(nodePosts)} did not match the the expected posts ${utils.stringify(expectedPosts)}.`}\n    }\n  }\n  // Don't check the CIDs as then the order of the links within the tags would\n  // matter. But that order really doesn't matter.\n  return {success: 'All works!'}\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./03.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./03.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./03.vue?vue&type=template&id=ff69c5a4&\"\nimport script from \"./03.vue?vue&type=script&lang=js&\"\nexport * from \"./03.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-04\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"lessonTitle\":\"Bigger DAG\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-blog-04\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Bigger DAG\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './04.md'\nimport exercise from './04-exercise.md'\nimport utils from './utils.js'\nconst shallowEqualArrays = require('shallow-equal/arrays')\nconst CID = require('cids')\n\nconst code = `/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n\n  // Add your code here\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()}\n    ]\n  })\n}\n\nreturn run`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"]\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return dogPostCid\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  if (!CID.isCID(result)) {\n    return {fail: 'Did not return a valid CID instance.'}\n  }\n  const node = (await ipfs.dag.get(result)).value\n  if (node.content === undefined) {\n    return {fail: 'Blog post needs to have a `content` field.'}\n  }\n  if (node.content !== 'dogs') {\n    return {fail: 'The `content` of the new blog post must be \"dogs\".'}\n  }\n  if (node.author === undefined) {\n    return {fail: 'Blog post needs to have an `author` field.'}\n  }\n  if (node.author['/'] === undefined) {\n    return {fail: 'The value of `author` needs to be a link (`{\"/\": \"some-cid\"}`).'}\n  }\n  const samCid = 'zdpuAzUoWGnKe4p13YbexQrb5AMhnDWDCqJt2XyqVPU6DxS4m'\n  const nodeAuthor = new CID(node.author['/']).toBaseEncodedString()\n  if (nodeAuthor !== samCid) {\n    return {fail: 'The author of the new blog post needs to be Sam.'}\n  }\n  if (node.tags === undefined) {\n    return {fail: 'Blog post needs to have a `tags` field.'}\n  }\n  if (!Array.isArray(node.tags)) {\n    return {fail: 'The value of the `tags` field must be an array of strings.'}\n  }\n  const isStrings = node.tags.every((tag) => typeof tag === 'string')\n  if (!isStrings) {\n    return {fail: `Tags need to be strings.`}\n  }\n  let expectedTags = ['funny', 'hobby']\n  if (!shallowEqualArrays(node.tags.sort(), expectedTags.sort())) {\n    return {fail: `The tags of the \"${node.content}\" blog post ${utils.stringify(node.tags)} did not match the the expected tags ${utils.stringify(expectedTags)}.`}\n  }\n  // Don't check the CID as then the order of the links within the tags would\n  // matter. But that order really doesn't matter.\n  return {success: 'All works!'}\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./04.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./04.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./04.vue?vue&type=template&id=4124f750&\"\nimport script from \"./04.vue?vue&type=script&lang=js&\"\nexport * from \"./04.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-05\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"lessonTitle\":\"Keep building links\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-blog-05\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Keep building links\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './05.md'\nimport exercise from './05-exercise.md'\nimport utils from './utils.js'\nconst shallowEqualArrays = require('shallow-equal/arrays')\nconst CID = require('cids')\n\nconst code = `/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"]\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  // Add your new code here and modify the tags above\n}\n\nreturn run`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"]\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()},\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n  const funnyTagCid = await ipfs.dag.put({\n    tag: \"funny\",\n    posts: [\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return [outdoorTagCid, hobbyTagCid, funnyTagCid]\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  const validatedArray = utils.validateArrayOfCids(result, 3)\n  if (validatedArray.fail) {\n    return validatedArray\n  }\n\n  for (const cid of result) {\n    const obj = await ipfs.dag.get(cid)\n    const node = obj.value\n    if (node.tag === undefined) {\n      return {fail: 'Tag nodes need to have a `tag` field.'}\n    }\n    if (typeof node.tag !== 'string') {\n      return {fail: '`tag` field needs to be a string.'}\n    }\n    if (node.posts === undefined) {\n      return {fail: 'Tag nodes need to have a `posts` field.'}\n    }\n    if (!Array.isArray(node.posts)) {\n      return {fail: 'The value of the `posts` field must be an array of links.'}\n    }\n    const isLinks = node.posts.every((post) => '/' in post)\n    if (!isLinks) {\n      return {fail: 'The values of the `posts` array must be links.'}\n    }\n\n    let expectedPosts\n    const treePostCid = 'zdpuAri55PR9iW239ahcbnfkFU2TVyD5iLmqEFmwY634KZAJV'\n    const computerPostCid = 'zdpuAqaHPSosSZFRPe7u5q3yNqgg4JuvrLaUJxGamNPLhWivX'\n    const dogPostCid = 'zdpuAuaznfNPWfgSSrcGxkm3yqyssY6mz8i5T2gxqpEpNExG6'\n    switch (node.tag) {\n      case 'funny':\n        expectedPosts = [dogPostCid]\n        break\n      case 'hobby':\n        expectedPosts = [treePostCid, computerPostCid, dogPostCid]\n        break\n      case 'outdoor':\n        expectedPosts = [treePostCid]\n        break\n      default:\n        return {fail: `Wrong tag (${node.tag}). Did you mean one of funny, hobby, outdoor?`}\n    }\n    const nodePosts = node.posts.map((post) => new CID(post['/']).toBaseEncodedString())\n    if (!shallowEqualArrays(nodePosts.sort(), expectedPosts.sort())) {\n      return {fail: `The posts of the tag \"${node.tag}\" ${utils.stringify(nodePosts)} did not match the the expected posts ${utils.stringify(expectedPosts)}.`}\n    }\n  }\n  // Don't check the CIDs as then the order of the links would matter.\n  // But that order really doesn't matter.\n  return {success: 'All works!'}\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./05.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./05.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./05.vue?vue&type=template&id=d3b91d74&\"\nimport script from \"./05.vue?vue&type=script&lang=js&\"\nexport * from \"./05.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-06\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"exercise\":_vm.exercise,\"lessonTitle\":\"Chain of links\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-blog-06\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Chain of links\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './06.md'\nimport exercise from './06-exercise.md'\nconst CID = require('cids')\n\nconst code = `/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n\n  // Modify the blog posts below\n\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"]\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"]\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()},\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n  const funnyTagCid = await ipfs.dag.put({\n    tag: \"funny\",\n    posts: [\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return dogPostCid\n}\n\nreturn run`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"],\n    prev: {\"/\": treePostCid.toBaseEncodedString()}\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"],\n    prev: {\"/\": computerPostCid.toBaseEncodedString()}\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()},\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n  const funnyTagCid = await ipfs.dag.put({\n    tag: \"funny\",\n    posts: [\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return dogPostCid\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  if (!CID.isCID(result)) {\n    return {fail: 'Did not return a valid CID instance.'}\n  }\n  const node = (await ipfs.dag.get(result)).value\n  if (node.content === undefined || node.content !== 'dogs') {\n    return {fail: `The returned value should be the CID of the \"dogs\" blog post.`}\n  }\n  if (node.prev === undefined) {\n    return {fail: 'The \"dogs\" blog post needs to have a `prev` field.'}\n  }\n  if (node.prev['/'] === undefined) {\n    return {fail: 'The value of `prev` of the \"dogs\" blog post needs to be a link (`{\"/\": \"some-cid\"}`).'}\n  }\n\n  const dogPostCid = 'zdpuAxe3g8XBLrqbp3NrjaiBLTrXjJ3SJymePGutsRRMrhAKS'\n  const computerPostCid = 'zdpuAwwT4kGJxT7mgVZRgvmV3ke8qGNZGLuCgLhJsdBSQGM44'\n  const treePostCid = 'zdpuAri55PR9iW239ahcbnfkFU2TVyD5iLmqEFmwY634KZAJV'\n  const nodePrev = new CID(node.prev['/'])\n\n  const computerNode = (await ipfs.dag.get(nodePrev)).value\n  if (computerNode.content === undefined) {\n    return {fail: `The \"dogs\" blog post should link to the \"computers\" blog post.`}\n  }\n  if (computerNode.content !== 'computers') {\n    return {fail: `The \"dogs\" blog post should link to the \"computers\" blog post, but it links to ${computerNode.content}.`}\n  }\n  if (computerNode.prev === undefined) {\n    return {fail: 'The \"computers\" blog post needs to have a `prev` field.'}\n  }\n  if (computerNode.prev['/'] === undefined) {\n    return {fail: 'The value of `prev` of the \"computers\" blog post needs to be a link (`{\"/\": \"some-cid\"}`).'}\n  }\n  const computerNodePrev = new CID(computerNode.prev['/'])\n\n  const treeNode = (await ipfs.dag.get(computerNodePrev)).value\n  if (treeNode.content === undefined) {\n    return {fail: `The \"compputers\" blog post should link to the \"trees\" blog post.`}\n  }\n  if (treeNode.content !== 'trees') {\n    return {fail: `The \"compputers\" blog post should link to the \"trees\" blog post, but it links to ${treeNode.content}.`}\n  }\n  if ('prev' in treeNode) {\n    return {fail: 'The \"trees\" blog post shouldn\\'t link to other blog posts.'}\n  }\n\n  const computerNodePrevCid = computerNodePrev.toBaseEncodedString()\n  if (computerNodePrevCid !== treePostCid) {\n    return {fail: `The \"computers\" blog post should link to the \"trees\" blog post, but it links to ${computerNodePrevCid}.`}\n  }\n  const nodePrevCid = nodePrev.toBaseEncodedString()\n  if (nodePrevCid !== computerPostCid) {\n    return {fail: `The \"dogs\" blog post should link to the \"computers\" blog post, but it links to ${nodePrevCid}.`}\n  }\n  const nodeCid = result.toBaseEncodedString()\n  if (nodeCid === dogPostCid) {\n    return {success: 'All works!'}\n  } else {\n    return {fail: `The returned CID ${nodeCid} did not match the expected CID ${dogPostCid}.`}\n  }\n}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./06.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./06.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./06.vue?vue&type=template&id=8318c408&\"\nimport script from \"./06.vue?vue&type=script&lang=js&\"\nexport * from \"./06.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"lesson-blog-07\"},[_c('Lesson',{attrs:{\"text\":_vm.text,\"code\":_vm.code,\"validate\":_vm.validate,\"modules\":_vm.modules,\"exercise\":_vm.exercise,\"lessonTitle\":\"Hop through nodes\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"lesson-blog-07\">\n    <Lesson v-bind:text=\"text\" v-bind:code=\"code\"\n            :validate=\"validate\"\n            :modules=\"modules\"\n            :exercise=\"exercise\"\n            lessonTitle=\"Hop through nodes\">\n    </Lesson>\n  </div>\n</template>\n\n<script>\nimport Lesson from '../../components/Lesson'\nimport text from './07.md'\nimport exercise from './07-exercise.md'\nimport utils from './utils.js'\nconst shallowEqualArrays = require('shallow-equal/arrays')\nconst CID = require('cids')\n\nconst code = `/* globals ipfs */\nconst CID = require('cids')\n\nconst traversePosts = async (cid) => {\n  // Your code goes here\n}\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"],\n    prev: {\"/\": treePostCid.toBaseEncodedString()}\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"],\n    prev: {\"/\": computerPostCid.toBaseEncodedString()}\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()},\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n  const funnyTagCid = await ipfs.dag.put({\n    tag: \"funny\",\n    posts: [\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return traversePosts\n}\n\nreturn run`\n\n// eslint-disable-next-line no-unused-vars\nconst _solution = `\n/* globals ipfs */\n\nconst CID = require('cids')\n\nconst traversePosts = async (cid) => {\n  const result = []\n  while (cid) {\n    result.push(cid)\n    const current = await ipfs.dag.get(cid)\n    const prev = current.value.prev\n    if (prev) {\n      cid = new CID(prev['/'])\n    } else {\n      return result\n    }\n  }\n}\n\nconst run = async () => {\n  const natCid = await ipfs.dag.put({author: \"Nat\"})\n  const samCid = await ipfs.dag.put({author: \"Sam\"})\n  const treePostCid = await ipfs.dag.put({\n    content: \"trees\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"outdoor\", \"hobby\"]\n  })\n  const computerPostCid = await ipfs.dag.put({\n    content: \"computers\",\n    author: {\"/\": natCid.toBaseEncodedString()},\n    tags: [\"hobby\"],\n    prev: {\"/\": treePostCid.toBaseEncodedString()}\n  })\n  const dogPostCid = await ipfs.dag.put({\n    content: \"dogs\",\n    author: {\"/\": samCid.toBaseEncodedString()},\n    tags: [\"funny\", \"hobby\"],\n    prev: {\"/\": computerPostCid.toBaseEncodedString()}\n  })\n\n  const outdoorTagCid = await ipfs.dag.put({\n    tag: \"outdoor\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()}\n    ]\n  })\n  const hobbyTagCid = await ipfs.dag.put({\n    tag: \"hobby\",\n    posts: [\n      {\"/\": treePostCid.toBaseEncodedString()},\n      {\"/\": computerPostCid.toBaseEncodedString()},\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n  const funnyTagCid = await ipfs.dag.put({\n    tag: \"funny\",\n    posts: [\n      {\"/\": dogPostCid.toBaseEncodedString()}\n    ]\n  })\n\n  return traversePosts\n}\n\nreturn run\n`\n\nconst validate = async (result, ipfs) => {\n  if (!result) {\n    return {fail: 'You forgot to return a result :)'}\n  }\n  if (typeof result !== 'function') {\n    return {fail: 'Return value needs to be a function.'}\n  }\n\n  const dogPostCid = 'zdpuAxe3g8XBLrqbp3NrjaiBLTrXjJ3SJymePGutsRRMrhAKS'\n  const computerPostCid = 'zdpuAwwT4kGJxT7mgVZRgvmV3ke8qGNZGLuCgLhJsdBSQGM44'\n  const treePostCid = 'zdpuAri55PR9iW239ahcbnfkFU2TVyD5iLmqEFmwY634KZAJV'\n  try {\n    const returnValue = await result(new CID(dogPostCid))\n    if (returnValue === undefined) {\n      return {fail: `Your function needs to return 3 CIDs.`}\n    }\n    if (returnValue.length !== 3) {\n      return {fail: `Your function needs to return 3 CIDs.`}\n    }\n    const isCids = returnValue.every(CID.isCID)\n    if (!isCids) {\n      return {fail: `Your function needs to return CIDs`}\n    }\n    const expectedCids = [treePostCid, computerPostCid, dogPostCid]\n    const returnedCids = returnValue.map((item) => new CID(item).toBaseEncodedString())\n    if (!shallowEqualArrays(returnedCids.sort(), expectedCids.sort())) {\n      return {fail: `The CIDs returned by the function ${utils.stringify(returnedCids)} did not match the the expected CIDs ${utils.stringify(expectedCids)}.`}\n    }\n  } catch (err) {\n    return {fail: `Your function threw an error: ${err}.`}\n  }\n  return {success: 'All works!'}\n}\n\nlet modules = {cids: require('cids')}\n\nexport default {\n  components: {\n    Lesson\n  },\n  data: () => {\n    return {\n      code,\n      text,\n      validate,\n      modules,\n      exercise\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./07.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./07.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./07.vue?vue&type=template&id=443725d6&\"\nimport script from \"./07.vue?vue&type=script&lang=js&\"\nexport * from \"./07.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Global styles. Opt-in single-purpose atoms only, no hairy css \"frameworks\".\nimport 'tachyons'\nimport 'ipfs-css'\n\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport App from './App.vue'\nimport Home from './components/home/Home.vue'\nimport Lesson01 from './lessons/Basics/01.vue'\nimport Lesson02 from './lessons/Basics/02.vue'\nimport Lesson03 from './lessons/Basics/03.vue'\nimport LessonBlog01 from './lessons/Blog/01.vue'\nimport LessonBlog02 from './lessons/Blog/02.vue'\nimport LessonBlog03 from './lessons/Blog/03.vue'\nimport LessonBlog04 from './lessons/Blog/04.vue'\nimport LessonBlog05 from './lessons/Blog/05.vue'\nimport LessonBlog06 from './lessons/Blog/06.vue'\nimport LessonBlog07 from './lessons/Blog/07.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  { path: '/', component: Home },\n  { path: '/basics/01', component: Lesson01 },\n  { path: '/basics/02', component: Lesson02 },\n  { path: '/basics/03', component: Lesson03 },\n  { path: '/blog/01', component: LessonBlog01 },\n  { path: '/blog/02', component: LessonBlog02 },\n  { path: '/blog/03', component: LessonBlog03 },\n  { path: '/blog/04', component: LessonBlog04 },\n  { path: '/blog/05', component: LessonBlog05 },\n  { path: '/blog/06', component: LessonBlog06 },\n  { path: '/blog/07', component: LessonBlog07 }\n]\n\nconst router = new VueRouter({\n  routes,\n  scrollBehavior (to, from) {\n    return { x: 0, y: 0 }\n  }\n})\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n","module.exports = \"You can create nodes using the `ipfs.dag.put` API.\\n\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Button.vue?vue&type=style&index=0&id=6f2f165f&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Button.vue?vue&type=style&index=0&id=6f2f165f&scoped=true&lang=css&\"","module.exports = __webpack_public_path__ + \"img/ipfs-logo.4831bd1a.svg\";","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=7c441f4c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=7c441f4c&scoped=true&lang=css&\"","module.exports = \"Add a new field called `tags` whose value is an array of tags. Use the tags `outdoor` and `hobby` for the blog post about trees. The blog post about computers has only a single tag called `hobby`.\\n\"","module.exports = __webpack_public_path__ + \"img/ipfs-illustrations-how-1.acefea6d.svg\";","module.exports = \"First, you'll need to add the new blog post to the `hobby` tag.\\n\\nThere isn’t a node for the `funny` tag yet either, so create a new node with the same data as the other tag nodes and add a link to the blog post about dogs.\\n\\nReturn the CIDs of all three tag nodes.\\n\"","module.exports = \"One important feature of DAGs is the ability to link them together.\\n\\nThe way you express links in the `ipfs` DAG store is with an object with a\\nsingle `'/'` attribute pointed at the `CID` of another node.\\n\\nFor example, if we wanted one node to have a link called \\\"foo\\\" pointed\\nto another CID, it might look like:\\n\\n```javascript\\n{\\n  foo: {'/': 'z43AaGEvwdfzjrCZ3Sq7DKxdDHrwoaPQDtqF4jfdkNEVTiqGVFW'}\\n}\\n```\\n\\nIn `js-ipfs` we tend to work with instances of `CID` from the `cids` module.\\nLinks need to be expressed with a base encoded string, so to create the\\nstructure above you might use:\\n\\n```javascript\\n{\\n  foo: {'/': cid.toBaseEncodedString()}\\n}\\n```\\n\"","module.exports = \"**CID** - Content Identifier. An unique address for a block of data in IPFS that is derived from it's content.\\n\\n**DAG** - Directed Acyclic Graph. Blocks in IPFS form a graph as they can point to other blocks by their CID. These links can only point one direction (directed) and across the whole graph there are no loops or cycles (acyclic).\\n\"","module.exports = \"A single object can have many links to other nodes. To illustrate this, we are creating new nodes which could be used for a tag cloud.\\n\\nLinks don’t necessarily need to be the value of a field (we call those “named links”); they can also be in an array.\\n\\n```javascript\\n{ links: [\\n    {'/': 'a-base-encoded-cid'},\\n    {'/': 'another-base-encoded-cid'}\\n  ]\\n}\\n```\\n\\nThis is perfect for our use case. Create a new node for the tags “outdoor” and “hobby.” The structure should look like this:\\n\\n```javavscript\\n{\\n  tag: \\\"name-of-the-tag\\\",\\n  posts: [\\n    // links to the CIDs\\n  ]\\n}\\n```\\n\\nPlease note that arrays are order-dependent. This means that two arrays with the same links in a different order will get a different CID.\\n\"","module.exports = \"This exercise has some prepared code to get started faster. It resembles a blog. There are authors (Nat and Sam) and some blog posts about trees and computers. At the moment there’s no relation between them. Let’s update the blog posts so that they link to the author.\\n\\nIn the [basic lessons](#/basics/02), we learned that a link in IPLD is represented as an object with a slash as its only field:\\n\\n```javascript\\nconst link = {'/': 'a-base-encoded-cid'}\\n```\\n\"","module.exports = \"Fill in the body of the `traversePosts()` function. It takes the CID object of the most recent blog post as input. Use that to get the object from IPFS and follow the `prev` links. The return value of the function should be an array with the CID objects of all nodes (including the input CID).\\n\"","module.exports = \"Create a link named `bar` that points to the node we created in the first the lesson. Put it into IPFS and return its CID.\\n\\nThe editor is pre-populated with the code to create the node we're linking to.\\n\"","module.exports = \"Use `ipfs.dag.put` to create a node for the data `{test: 1}`.\\n\\nThis method will return a CID (Content Identifier), which you should in turn return from your `run()` function.\\n\"","module.exports = \"Use `ipfs.dag.get` to return the value of `test` by traversing the link from the object you `put` in the previous exercise.\""],"sourceRoot":""}